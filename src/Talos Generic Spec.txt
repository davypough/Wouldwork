(define-types
  myself    (me)
  gate      (gate1)
  screen    (screen1)
  jammer    (jammer1)
  box       (box1)
  gun       (gun1)
  switch    (switch1)
  fan       (fan1)
  gears     (gears1)
  ladder    (ladder1)
  swapper   (swapper1)
  area      (area1)
  hue       (red blue green none)
  pressure-plate    (pressure-plate1)
  red-transmitter   (red-transmitter1)
  blue-transmitter  (blue-transmitter1)
  green-transmitter (green-transmitter1)
  red-receiver      (red-receiver1)
  blue-receiver     (blue-receiver1)
  green-receiver    (green-receiver1)
  simple-connector  (simple-connector1)
  inverter-connector (inverter-connector1)
  rgb-connector     (rgb-connector1)
  red-connector     (red-connector1)  ;colored connectors create a dome when active
  blue-connector    (blue-connector1)
  green-connector   (green-connector1)

  transmitter       (either red-transmitter blue-transmitter green-transmitter)
  receiver          (either red-receiver blue-receiver green-receiver)
  jammer-target     (either gate gun gears)
  divider           (either gate screen)
  cargo             (either jammer connector box fan)  ;object that can be picked up
  support           (either box pressure-plate swapper)
  enabler           (either receiver pressure-plate switch)  ;enables something else when active
  basic-connector   (either simple-connector inverter-connector rgb-connector)
  connector         (either basic-connector red-connector blue-connector green-connector)
  basic-connector-target    (either transmitter receiver connector)
  red-connector-target      (either red-transmitter basic-connector)
  blue-connector-target     (either blue-transmitter basic-connector)
  green-connector-target    (either green-transmitter basic-connector))


(define-dynamic-relations
  (holding myself $cargo)
  (free myself)
  (loc (either myself cargo) $area)
  (on (either myself cargo) $support)
  (attached fan gears)
  (jamming jammer $jammer-target)
  (connecting connector basic-connector-target)
  (active (either connector receiver gate gears switch))
  (basic-connector-color basic-connector $hue))


(define-static-relations
  (adjacent area area)  ;agent can always move unimpeded between adjacent areas
  (locale (either gate gun transmitter receiver) area)
  (separates divider area area)
  (climbable> ladder area area)
  (controls enabler (either gate gears))
  (controls2 enabler enabler (either gate gears))  ;controlled by two enablers both active
  (los0 area (either gate gun transmitter receiver))  ;clear los from an area to a fixture
  (los1 area divider (either gate gun transmitter receiver))
  (los2 area divider divider (either gate gun transmitter receiver))
  (visible0 area area)  ;from a given area could see a potential connector in another area
  (visible1 area divider area)
  (visible2 area divider divider area))


(define-complementary-relations  
  (holding myself $cargo) -> (not (free myself)))


;;;; QUERY FUNCTIONS ;;;;


(define-query source? (?object)
  (or (transmitter ?object)
      (and (connector ?object)
           (active ?object))))


(define-query los-thru-1-divider? (?area ?station)
  (exists (?d divider)
    (and (los1 ?area ?d ?station)
         (or (barrier ?d)
             (and (gate ?d)
                  (not (active ?d)))))))


